import os
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import BotCommand
from aiogram.filters import Command
from zadarma_api import ZadarmaAPI

# üîê –¢–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞
TOKEN = os.getenv("TOKEN")

# üîê –î–∞–Ω–Ω—ã–µ Zadarma
ZD_API_KEY = os.getenv("c41558294371a471c163")
ZD_API_SECRET = os.getenv("02974ac60eaee64523c1")

# üìû –ù–æ–º–µ—Ä–∞
BARRIER_NUMBER = "+77001111111"  # –Ω–æ–º–µ—Ä –¥–ª—è —à–ª–∞–≥–±–∞—É–º–∞
GATE_NUMBER = "+77762268953"     # –Ω–æ–º–µ—Ä –¥–ª—è –≤–æ—Ä–æ—Ç
CALL_FROM = "+77009999999"       # —Ç–≤–æ–π –Ω–æ–º–µ—Ä/SIP –æ—Ç Zadarma

bot = Bot(token=TOKEN)
dp = Dispatcher()
zd_api = ZadarmaAPI(ZD_API_KEY, ZD_API_SECRET)


# üìû –§—É–Ω–∫—Ü–∏—è –∑–≤–æ–Ω–∫–∞ —á–µ—Ä–µ–∑ Zadarma
async def zadarma_call(to_number: str):
    try:
        response = zd_api.call("/request/callback/", {
            "from": CALL_FROM,
            "to": to_number
        })
        print(f"üìû –ó–≤–æ–Ω–æ–∫ –Ω–∞ {to_number}: {response}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–≤–æ–Ω–∫–∞ –Ω–∞ {to_number}: {e}")


# üö™ –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤–æ—Ä–æ—Ç
@dp.message(Command("gate"))
async def request_gate(message: types.Message):
    requester = message.from_user.username or message.from_user.full_name
    await message.delete()

    # –ó–≤–æ–Ω–æ–∫ –Ω–∞ –Ω–æ–º–µ—Ä –≤–æ—Ä–æ—Ç
    await zadarma_call(GATE_NUMBER)

    await message.answer(f"üö™ –í–æ—Ä–æ—Ç–∞ –æ—Ç–∫—Ä—ã—Ç—ã. –û—Ç–∫—Ä—ã–ª @{requester}")


# üõ° –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —à–ª–∞–≥–±–∞—É–º–∞
@dp.message(Command("open"))
async def request_barrier(message: types.Message):
    requester = message.from_user.username or message.from_user.full_name
    await message.delete()

    # –ó–≤–æ–Ω–æ–∫ –Ω–∞ –Ω–æ–º–µ—Ä —à–ª–∞–≥–±–∞—É–º–∞
    await zadarma_call(BARRIER_NUMBER)

    await message.answer(f"üõ° –®–ª–∞–≥–±–∞—É–º –æ—Ç–∫—Ä—ã—Ç. –û—Ç–∫—Ä—ã–ª @{requester}")


# üìã –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥
async def set_commands(bot: Bot):
    commands = [
        BotCommand(command="start", description="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
        BotCommand(command="open", description="üõ° –û—Ç–∫—Ä—ã—Ç—å —à–ª–∞–≥–±–∞—É–º"),
        BotCommand(command="gate", description="üö™ –û—Ç–∫—Ä—ã—Ç—å –≤–æ—Ä–æ—Ç–∞"),
    ]
    await bot.set_my_commands(commands)


# ‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫
async def main():
    await set_commands(bot)
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
